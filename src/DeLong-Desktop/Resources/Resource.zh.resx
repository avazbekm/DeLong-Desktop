<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Action" xml:space="preserve">
    <value>操作 </value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>添加</value>
  </data>
  <data name="AddClientWindow" xml:space="preserve">
    <value>添加客户窗口</value>
  </data>
  <data name="additionalActions" xml:space="preserve">
    <value>附加操作</value>
  </data>
  <data name="AdditionalOperations" xml:space="preserve">
    <value>其他操作</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>地址 </value>
  </data>
  <data name="Amallar " xml:space="preserve">
    <value>操作</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>數量</value>
  </data>
  <data name="Card" xml:space="preserve">
    <value>塑膠</value>
  </data>
  <data name="Cash" xml:space="preserve">
    <value>現金</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>分类</value>
  </data>
  <data name="Chegirma " xml:space="preserve">
    <value>折扣</value>
  </data>
  <data name="ClientFullname" xml:space="preserve">
    <value>客户姓名</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>筆記</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>確認</value>
  </data>
  <data name="CostPrice" xml:space="preserve">
    <value>產品成本</value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>客户</value>
  </data>
  <data name="CustomerName" xml:space="preserve">
    <value>客戶名稱</value>
  </data>
  <data name="DebtAmount" xml:space="preserve">
    <value>貸款金額</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>刪除</value>
  </data>
  <data name="Dollar" xml:space="preserve">
    <value>美元</value>
  </data>
  <data name="Dollar kursi " xml:space="preserve">
    <value>美元汇率</value>
  </data>
  <data name="Dollar kursini kiriting " xml:space="preserve">
    <value>输入美元汇率</value>
  </data>
  <data name="DueData " xml:space="preserve">
    <value>到期日期</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>退出</value>
  </data>
  <data name="Expense" xml:space="preserve">
    <value>支出</value>
  </data>
  <data name="Faolligi " xml:space="preserve">
    <value>活跃度</value>
  </data>
  <data name="Income" xml:space="preserve">
    <value>收入</value>
  </data>
  <data name="Jami summa " xml:space="preserve">
    <value>总金额</value>
  </data>
  <data name="JSHSHIR" xml:space="preserve">
    <value>个人识别码</value>
  </data>
  <data name="Kategoriya" xml:space="preserve">
    <value>类别</value>
  </data>
  <data name="kategoriya boyicha qidiruv" xml:space="preserve">
    <value>按类别搜索</value>
  </data>
  <data name="Mahsulot nomi " xml:space="preserve">
    <value>产品名称</value>
  </data>
  <data name="Mahsulotni qidirish " xml:space="preserve">
    <value>搜索产品</value>
  </data>
  <data name="Mahsulotni tanlang " xml:space="preserve">
    <value>选择产品</value>
  </data>
  <data name="Mijozlar" xml:space="preserve">
    <value>客户</value>
  </data>
  <data name="Mijozni_tanlang_" xml:space="preserve">
    <value>選擇客戶</value>
  </data>
  <data name="Miqdori_" xml:space="preserve">
    <value>數量</value>
  </data>
  <data name="Naqd " xml:space="preserve">
    <value>现金</value>
  </data>
  <data name="Narxi " xml:space="preserve">
    <value>价格</value>
  </data>
  <data name="Ochirish" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="Olchov birligi" xml:space="preserve">
    <value>计量单位</value>
  </data>
  <data name="Ombor mudiri " xml:space="preserve">
    <value>仓库管理员</value>
  </data>
  <data name="Ombor nomi " xml:space="preserve">
    <value>仓库名称</value>
  </data>
  <data name="Ombordagi miqdor " xml:space="preserve">
    <value>仓库数量</value>
  </data>
  <data name="Pay" xml:space="preserve">
    <value>支付</value>
  </data>
  <data name="PayDebt" xml:space="preserve">
    <value>還清債務</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>电话 </value>
  </data>
  <data name="Plastik " xml:space="preserve">
    <value>刷卡支付</value>
  </data>
  <data name="Product" xml:space="preserve">
    <value>产品</value>
  </data>
  <data name="ProductList" xml:space="preserve">
    <value>產品列表</value>
  </data>
  <data name="ProductName" xml:space="preserve">
    <value>產品名稱</value>
  </data>
  <data name="Qarz" xml:space="preserve">
    <value>债务</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>數量</value>
  </data>
  <data name="ReceiptId" xml:space="preserve">
    <value>檢查身份證</value>
  </data>
  <data name="Report" xml:space="preserve">
    <value>报告</value>
  </data>
  <data name="ReturnedFrom" xml:space="preserve">
    <value>他在躲避誰？</value>
  </data>
  <data name="ReturnedProducts" xml:space="preserve">
    <value>退回產品</value>
  </data>
  <data name="SaleHistory" xml:space="preserve">
    <value>銷售歷史</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>搜索</value>
  </data>
  <data name="SelectProduct" xml:space="preserve">
    <value>選擇產品</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>船運</value>
  </data>
  <data name="Sotib olish " xml:space="preserve">
    <value>购买
</value>
  </data>
  <data name="Sotish " xml:space="preserve">
    <value>销售
</value>
  </data>
  <data name="Sotuvni amalga oshirish " xml:space="preserve">
    <value>进行销售</value>
  </data>
  <data name="T/r " xml:space="preserve">
    <value>序号</value>
  </data>
  <data name="Telegram Phone Number" xml:space="preserve">
    <value>电报号码</value>
  </data>
  <data name="ToExcell" xml:space="preserve">
    <value>导出到 Excel</value>
  </data>
  <data name="Tolovsummasi" xml:space="preserve">
    <value>付款金额</value>
  </data>
  <data name="TotalAmount" xml:space="preserve">
    <value>總金額</value>
  </data>
  <data name="TotalDebt" xml:space="preserve">
    <value>總債務</value>
  </data>
  <data name="ToWarehouse" xml:space="preserve">
    <value>去哪個倉庫？</value>
  </data>
  <data name="To‘lov summasi " xml:space="preserve">
    <value>付款金额</value>
  </data>
  <data name="TransactionType" xml:space="preserve">
    <value>交易類型</value>
  </data>
  <data name="Umumiy summasi " xml:space="preserve">
    <value>总金额</value>
  </data>
  <data name="UnitOfMeasure" xml:space="preserve">
    <value>計量單位</value>
  </data>
  <data name="Valyutani ayirboshlash " xml:space="preserve">
    <value>货币兑换</value>
  </data>
  <data name="Warehouse" xml:space="preserve">
    <value>仓库</value>
  </data>
  <data name="WarehouseTransfer" xml:space="preserve">
    <value>倉庫間轉移</value>
  </data>
  <data name="Yakunlash " xml:space="preserve">
    <value>完成</value>
  </data>
</root>